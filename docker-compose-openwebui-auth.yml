version: '3'
services:
  open-webui:
    ports:
      - '3050:8080'
    image: ghcr.io/open-webui/open-webui:v0.4.8
#    image: openwebui-local:latest
#    build:
#        context: ../open-webui
#        dockerfile: Dockerfile
    depends_on:
      - open-webui-db
      - keycloak
    env_file:
      - docker.env
    environment:
      # https://docs.openwebui.com/getting-started/advanced-topics/env-configuration
      BYPASS_MODEL_ACCESS_CONTROL: True
      DEFAULT_USER_ROLE: user
#      WEBUI_AUTH: 0
      #      OPENAI_API_BASE_URL: 'https://api.openai.com/v1'
      GLOBAL_LOG_LEVEL: debug
      SRC_LOG_LEVELS: '{"SOCKET": "DEBUG", "MAIN": "DEBUG", "MODELS": "DEBUG", "OPENAI": "DEBUG", "OAUTH": "DEBUG", "CONFIG": "DEBUG", "DB": "DEBUG"}'
      #      OPENAI_API_BASE_URL: 'http://dev:5000/api/v1'
      # Supports balanced OpenAI base API URLs, semicolon-separated.
      OPENAI_API_BASE_URL: 'http://dev:5000/api/v1'
      CORS_ALLOW_ORIGIN: '*'
      OPENAI_API_KEY: 'bedrock'
      #      DEFAULT_MODELS: "General Purpose"
      DEFAULT_MODELS: "us.anthropic.claude-3-5-sonnet-20241022-v2:0"
      ENABLE_MODEL_FILTER: True
      #      MODEL_FILTER_LIST: "anthropic.claude-3-5-sonnet-20240620-v1:0"
      WEBUI_SECRET_KEY: ""
      WEBUI_DB_HOST: "open-webui-db"
      DATABASE_URL: "postgresql://myapp_user:myapp_pass@open-webui-db:5431/myapp_db"
      ENABLE_OLLAMA_API: False
      ENABLE_EVALUATION_ARENA_MODELS: False
      #      TITLE_GENERATION_PROMPT_TEMPLATE: "What do you want to know about your health?"
      ENABLE_IMAGE_GENERATION: True
      IMAGE_GENERATION_ENGINE: "openai"
      IMAGES_OPENAI_API_BASE_URL: "http://localhost:5050/api/v1"
      IMAGES_OPENAI_API_KEY: "bedrock"
      IMAGE_GENERATION_MODEL: "amazon.titan-image-generator-v2:0"
      LOAD_PROMPT_FROM_LANGCHAIN_HUB: False
      WEBUI_FAVICON_URL: "http://localhost:5050/favicon.png"
      WEBUI_NAME: "b.ai"
      WEBUI_BANNERS: '[{"id": "1", "type":"info", "title":"Welcome to b.well AI", "content":"Welcome to b.well AI! **[Click here for AI Resource Guide](https://icanbwell.atlassian.net/wiki/spaces/BRG/pages/5092442117/AI+Resource+Guide)**", "dismissible": false, "timestamp": 100000},{"id": "2", "type":"info", "title":"Help", "content":"Type \"help\" if you need help.  Reload page if you do not get results.  Use \"Prompt Helper\" model to create better prompts.", "dismissible": false, "timestamp": 100000}]'
      ENABLE_FORWARD_USER_INFO_HEADERS: True
      ENABLE_FORWARD_OAUTH_TOKEN: True
      # Speech to text settings
      AUDIO_STT_ENGINE: "openai"
      AUDIO_STT_OPENAI_API_BASE_URL: "http://localhost:5050/api/v1"
      # text to speech settings
      AUDIO_TTS_ENGINE: "openai"
      AUDIO_TTS_OPENAI_API_BASE_URL: "http://localhost:5050/api/v1"
      AUDIO_TTS_VOICE: "alloy"
      # Authentication settings (https://docs.openwebui.com/features/sso#oidc)
#      ENABLE_SIGNUP: True
#      ENABLE_LOGIN_FORM: True
      ENABLE_API_KEY: False
      OAUTH_CLIENT_ID: "bwell-client-id"
      OPENID_PROVIDER_URL: "http://keycloak:8080/realms/bwell-realm/.well-known/openid-configuration"
      OAUTH_CLIENT_SECRET: "bwell-secret"
      ENABLE_OAUTH_SIGNUP: True
      OAUTH_PROVIDER_NAME: "keycloak"
      OAUTH_SCOPES: "openid email"
      OAUTH_USERNAME_CLAIM: "email"
      SAFE_MODE: True
      # disable some unneeded stuff like RAG
      RAG_EMBEDDING_MODEL: ""
      # curl --silent --fail http://localhost:8081/health | jq -ne 'input.status == true' || exit 1
  #    volumes:
  #      - ./openwebui/backend/data:/app/backend/data
  #      - ./openwebui-config/config.json:/app/backend/data/config.json:cached

  open-webui-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=myapp_db
      - POSTGRES_USER=myapp_user
      - POSTGRES_PASSWORD=myapp_pass
    ports:
      - "5431:5431"
    command: -p 5431
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myapp_user -d myapp_db -p 5431" ]
      interval: 3s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  keycloak:
    # https://github.com/keycloak/keycloak/releases
    image: quay.io/keycloak/keycloak:25.0.6
    #    container_name: keycloak
    #    build:
    #      dockerfile: keycloak.Dockerfile
    #      context: .
    #    depends_on:
    #      - postgres
    environment:
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      #      KC_DB: postgres
      #      KC_DB_URL: jdbc:postgresql://postgres/pdb
      #      KC_DB_USERNAME: admin
      #      KC_DB_PASSWORD: admin
      # The below settings are for test data creation
      # This is the user and password that will be created in the realm
      MY_ADMIN_USER_NAME: admin
      MY_ADMIN_USER_PASSWORD: password
      MY_ADMIN_USER_SCOPE: user/*.* access/*.*
      MY_ADMIN_USER_GROUPS: user/*.* access/*.*
      MY_ADMIN_USER_TOKEN_USERNAME: admin
      # This is the user and password that will be created in the realm
      MY_USER_NAME: tester
      MY_USER_PASSWORD: password
      # These groups get specified as scopes in the token
      MY_USER_GROUPS: user/*.*,access/*.* launch/patient,patient/*.read
      MY_USER_SCOPE: user/*.* access/*.* launch/patient patient/*.read openid profile email
      MY_USER_TOKEN_USERNAME: tester
      # This is the client setup
      CLIENT_ID: bwell-client-id
      CLIENT_SECRET: bwell-secret
      # This is the service account that will be created in the realm
      SERVICE_ACCOUNT_NAME: service-account
      SERVICE_ACCOUNT_SCOPE: user/*.* access/*.*
      SERVICE_ACCOUNT_GROUPS: user/*.* access/*.*
      # These are the custom claims that will be added to any generated token
      MY_USER_CLIENT_PERSON_ID: 0b2ad38a-20bc-5cf5-9739-13f242b05892
      MY_USER_CLIENT_PATIENT_ID: 22aa18af-af51-5799-bc55-367c22c85407
      MY_USER_BWELL_PERSON_ID: 0eb80391-0f61-5ce6-b221-a5428f2f38a7
      MY_USER_BWELL_PATIENT_ID: patient2
      QUARKUS_HTTP_ACCESS_LOG_PATTERN: "%r\n%{ALL_REQUEST_HEADERS}"
    ports:
      - "8080:8080"
    command: [ "start-dev", "--import-realm", "--verbose" ]
    volumes:
      - ./keycloak-config/realm-import.json:/opt/keycloak/data/import/realm-import.json
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3" ]
      interval: 10s
      timeout: 5s
      retries: 5

  openid-connect-debugger:
    image: leplusorg/openid-connect-provider-debugger:latest
#    network_mode: "host"
    ports:
      - "8085:80"
    environment:
      # http://localhost:8085/debug?oidc_client_id=bwell-client-id&oidc_client_secret=bwell-secret&oidc_discovery=http%3A%2F%2Fkeycloak%3A8080%2Frealms%2Fbwell-realm%2F.well-known%2Fopenid-configuration&oidc_redirect_uri=http%3A%2F%2Flocalhost%3A8085%2Fcallback
      # Configure to match your Keycloak OpenID Connect settings
      - ISSUER_URL=http://keycloak:8080/realms/bwell-realm
      - oidc_client_id=bwell-client-id
      - oidc_client_secret=bwell-secret
      - oidc_discovery=http://keycloak:8080/realms/bwell-realm/.well-known/openid-configuration
      - oidc_redirect_uri=http://localhost:8085/callback
      - oidc_scope=openid email
      - oidc_ssl_verify=no
    depends_on:
      - keycloak

volumes:
  postgres_data:
    driver: local
