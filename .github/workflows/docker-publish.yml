name: Docker to AWS ECR

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  IMAGE_NAME: language-model-gateway
  REPOSITORY_URL: 856965016623.dkr.ecr.us-east-1.amazonaws.com

jobs:
  push:
    runs-on: [self-hosted, main]

    steps:
      - uses: actions/checkout@v4

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Create docker context if not exists
        env:
          DOCKER_HOST:
        run: |
          CONTEXT_NAME="${IMAGE_NAME}-mycontext"
          docker info
          docker context ls
          # Check if context exists before creating
          if docker context ls | grep -q "$CONTEXT_NAME"; then
              docker context rm "$CONTEXT_NAME" -f
          fi
          docker context create "$CONTEXT_NAME"
          docker context use "$CONTEXT_NAME"
          docker context ls

      - name: Create docker builder
        env:
          DOCKER_HOST:
        run: |
          CONTEXT_NAME="${IMAGE_NAME}-mycontext"
          docker context use "$CONTEXT_NAME"
          BUILDER_NAME="${IMAGE_NAME}-builder"
    
          # Remove existing builder if it exists
          if docker buildx ls | grep -q "$BUILDER_NAME"; then
            docker buildx rm "$BUILDER_NAME" -f
          fi
          docker buildx create --use --name "$BUILDER_NAME"

      - name: Inspect docker builder
        env:
          DOCKER_HOST:
        run: |
          CONTEXT_NAME="${IMAGE_NAME}-mycontext"
          docker context use "$CONTEXT_NAME"
          docker buildx inspect --bootstrap

      - name: Build, tag, and push image to Amazon ECR
        env:
          TAG: ${{ github.event.release.tag_name }}
          DOCKER_HOST:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        run: |
          CONTEXT_NAME="${IMAGE_NAME}-mycontext"
          docker context use "$CONTEXT_NAME"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg GITHUB_TOKEN=${GITHUB_TOKEN} \
            -t $REPOSITORY_URL/$IMAGE_NAME:$TAG \
            -t $REPOSITORY_URL/$IMAGE_NAME:latest \
            --push \
            -f Dockerfile .

      - name: Delete docker builder
        env:
          DOCKER_HOST:
        run: |
          CONTEXT_NAME="${IMAGE_NAME}-mycontext"
          docker context use "$CONTEXT_NAME"
          BUILDER_NAME="${IMAGE_NAME}-builder"
          if docker buildx ls | grep -q "$BUILDER_NAME"; then
            docker buildx rm "$BUILDER_NAME" -f
          fi

      - name: Delete docker context if exists
        env:
          DOCKER_HOST:
        run: |
          CONTEXT_NAME="${IMAGE_NAME}-mycontext"
          docker info
          docker context use default
          docker context ls
          if docker context ls | grep -q "$CONTEXT_NAME"; then
              docker context rm "$CONTEXT_NAME" -f
          fi
          docker context ls

      - name: 'Cleanup build folder'
        if: always()
        run: |
          ls -la ./
          sudo rm -rf ${{ github.workspace }}/*
          ls -la ./
