services:
  dev:
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    container_name: language-model-gateway
    environment:
      DEBUG_METRICS: 0
      DD_TRACE_ENABLED: "false"
      LOG_LEVEL: INFO
      AGENT_URL: 'http://host.docker.internal:5055/api/v1'
      OPENAI_AGENT_URL: 'http://host.docker.internal:5055/api/v1'
      DEFAULT_PATIENT_ID: "eEooRVLYdWIW753OhZUd1dgxQRny4KCo6fiH-13lY0043"
#      DEFAULT_WEB_SEARCH_TOOL: "duckduckgo_search"
      DEFAULT_WEB_SEARCH_TOOL: "google_search"
      IMAGE_GENERATION_PATH: "/usr/src/language_model_gateway/image_generation"
#      IMAGE_GENERATION_PATH: "s3://bwell-dev-data-science-ue1/openwebui/image_generation/"
      IMAGE_GENERATION_URL: "http://localhost:5050/image_generation"
      MODELS_OFFICIAL_PATH: "/usr/src/language_model_gateway/language_model_gateway/configs/chat_completions/official"
      MODELS_TESTING_PATH: "/usr/src/language_model_gateway/language_model_gateway/configs/chat_completions/testing"
#      MODELS_ZIP_PATH: "https://github.com/icanbwell/language-model-gateway-configuration/zipball/main/"
#      MODELS_OFFICIAL_PATH: "configs/chat_completions/official"
#      MODELS_TESTING_PATH: "configs/chat_completions/testing"
#      MODELS_OFFICIAL_PATH: "https://github.com/icanbwell/language-model-gateway-configuration/tree/main/configs/chat_completions/official"
#      MODELS_TESTING_PATH: "https://github.com/icanbwell/language-model-gateway-configuration/tree/main/configs/chat_completions/testing"
      MODELS_PATH_BACKUP: "/usr/src/language_model_gateway/language_model_gateway/configs/chat_completions"
      CONFIG_CACHE_TIMEOUT_SECONDS: 120
      PROVIDER_SEARCH_API_URL: "https://provider-search.prod.icanbwell.com/graphql"
      # Number of worker process to run
      NUM_WORKERS: 1
      AWS_REGION: 'us-east-1'
      HELP_KEYWORDS: "help;/help;aid"
      LOG_INPUT_AND_OUTPUT: 1
      DEFAULT_MODEL_PROVIDER: "bedrock"
      DEFAULT_MODEL_NAME: "us.anthropic.claude-3-5-haiku-20241022-v1:0"
      GITHUB_ORGANIZATION_NAME: "icanbwell"
      GITHUB_MAXIMUM_REPOS: "100"
      GITHUB_MAXIMUM_PULL_REQUESTS_PER_REPO: "100"
      JIRA_BASE_URL: "https://icanbwell.atlassian.net"
#      JIRA_USERNAME: "imran.qureshi@icanbwell.com"
      JIRA_MAXIMUM_PROJECTS: "100"
      JIRA_MAXIMUM_ISSUES_PER_PROJECT: "100"
      MCP_TOOLS_METADATA_CACHE_TIMEOUT_SECONDS: 30
      # These define the connection to the identity provider for JWT validation
      # keycloak for local development
#      AUTH_PROVIDER_NAME: "keycloak"
#      AUTH_WELL_KNOWN_URI: "http://keycloak:8080/realms/bwell-realm/.well-known/openid-configuration"
#      AUTH_CLIENT_ID: "bwell-client-id"
#      AUTH_CLIENT_SECRET: "bwell-secret"
      # Okta for production
      AUTH_PROVIDER_NAME: "okta"
      AUTH_WELL_KNOWN_URI: "https://icanbwell.okta.com/.well-known/openid-configuration"
      # AUTH_CLIENT_ID and AUTH_CLIENT_SECRET are read from the docker.env file
      AUTH_REDIRECT_URI: "http://localhost:5050/auth/login"
      # if well-known URI is defined then JWKS_URI, AUTH_AUDIENCE and AUTH_ISSUER are not needed
#      AUTH_JWKS_URI: "http://keycloak:8080/realms/bwell-realm/protocol/openid-connect/certs"
#      AUTH_AUDIENCE: "my-mcp-server"
#      AUTH_ISSUER: "https://my-identity-provider.com/"
    env_file: docker.env
    ports:
      - '5050:5000'
    volumes:
    - ./:/usr/src/language_model_gateway/:cached
      # uncomment this for testing AWS models and the docker.env above (need the AWS_CREDENTIALS_PROFILE env var)
    - ~/.aws/:/etc/appuser/.aws/
    healthcheck:
      test: curl --fail -s http://localhost:5000/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - web

  keycloak:
    # https://github.com/keycloak/keycloak/releases
    image: quay.io/keycloak/keycloak:25.0.6
    #    container_name: keycloak
    #    build:
    #      dockerfile: keycloak.Dockerfile
    #      context: .
    #    depends_on:
    #      - postgres
    environment:
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      #      KC_DB: postgres
      #      KC_DB_URL: jdbc:postgresql://postgres/pdb
      #      KC_DB_USERNAME: admin
      #      KC_DB_PASSWORD: admin
      # The below settings are for test data creation
      # This is the user and password that will be created in the realm
      MY_ADMIN_USER_NAME: admin
      MY_ADMIN_USER_PASSWORD: password
      MY_ADMIN_USER_SCOPE: user/*.* access/*.*
      MY_ADMIN_USER_GROUPS: user/*.* access/*.*
      MY_ADMIN_USER_TOKEN_USERNAME: admin
      # This is the user and password that will be created in the realm
      MY_USER_NAME: tester
      MY_USER_PASSWORD: password
      # These groups get specified as scopes in the token
      MY_USER_GROUPS: user/*.*,access/*.* launch/patient,patient/*.read
      MY_USER_SCOPE: user/*.* access/*.* launch/patient patient/*.read openid profile email
      MY_USER_TOKEN_USERNAME: tester
      # This is the client setup
      CLIENT_ID: bwell-client-id
      CLIENT_SECRET: bwell-secret
      # This is the service account that will be created in the realm
      SERVICE_ACCOUNT_NAME: service-account
      SERVICE_ACCOUNT_SCOPE: user/*.* access/*.*
      SERVICE_ACCOUNT_GROUPS: user/*.* access/*.*
      # These are the custom claims that will be added to any generated token
      MY_USER_CLIENT_PERSON_ID: 0b2ad38a-20bc-5cf5-9739-13f242b05892
      MY_USER_CLIENT_PATIENT_ID: 22aa18af-af51-5799-bc55-367c22c85407
      MY_USER_BWELL_PERSON_ID: 0eb80391-0f61-5ce6-b221-a5428f2f38a7
      MY_USER_BWELL_PATIENT_ID: patient2
      QUARKUS_HTTP_ACCESS_LOG_PATTERN: "%r\n%{ALL_REQUEST_HEADERS}"
    ports:
      - "8080:8080"
    command: [ "start-dev", "--import-realm", "--verbose" ]
    volumes:
      - ./keycloak-config/realm-import.json:/opt/keycloak/data/import/realm-import.json
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - web

networks:
  web:
    driver: bridge