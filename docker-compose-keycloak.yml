# pragma: allowlist secret
services:
  keycloak:
    # https://github.com/keycloak/keycloak/releases
    image: quay.io/keycloak/keycloak:26.3.5
    #    image: 875300655693.dkr.ecr.us-east-1.amazonaws.com/keycloak/keycloak:26.3.2
    #    container_name: keycloak
    #    build:
    #      dockerfile: keycloak.Dockerfile
    #      context: .
    #    depends_on:
    #      - postgres
    environment:
      KC_HEALTH_ENABLED: true
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: password
      QUARKUS_HTTP_ACCESS_LOG_PATTERN: "%r\n%{ALL_REQUEST_HEADERS}"
    ports:
      - "8080:8080"
      # 9000 is for health checks: https://www.keycloak.org/observability/health
      - "9000:9000"
    command: [ "start-dev", "--verbose" ]
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n\" >&3;grep -q 'HTTP/1.1 200 OK' <&3" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - web

  keycloak-init:
    # This container is used to initialize Keycloak with test data
    depends_on:
      - keycloak
#    image: public.ecr.aws/docker/library/python:3.12-alpine3.20
    build:
        dockerfile: keycloak-config/keycloak-init.Dockerfile
        context: .
    volumes:
      - ./keycloak-config:/config
    environment:
      KEYCLOAK_HOST: keycloak
      KEYCLOAK_PORT: 8080
      KEYCLOAK_HEALTH_CHECK_PORT: 9000
      # These are the Keycloak admin credentials
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: password
      #      KC_DB: postgres
      #      KC_DB_URL: jdbc:postgresql://postgres/pdb
      #      KC_DB_USERNAME: admin
      #      KC_DB_PASSWORD: admin
      # The below settings are for test data creation
      # This is the user and password that will be created in the realm
      MY_ADMIN_USER_NAME: admin
      MY_ADMIN_USER_PASSWORD: password
      MY_ADMIN_USER_SCOPE: user/*.* access/*.*
      MY_ADMIN_USER_GROUPS: user/*.*,access/*.*
      MY_ADMIN_USER_TOKEN_USERNAME: admin
      MY_ADMIN_USER_SUB: admin-subject-id
      # This is the user and password that will be created in the realm
      MY_USER_NAME: tester
      MY_USER_PASSWORD: password
      MY_USER_EMAIL: imran.qureshi@icanbwell.com
      MY_USER_FIRST_NAME: Imran
      MY_USER_LAST_NAME: Qureshi
      MY_USER_SUB: tester-subject-id
      # These groups get specified as scopes in the token
      MY_USER_GROUPS: user/*.*,access/*.*,launch/patient,patient/*.read
      MY_USER_SCOPE: user/*.* access/*.* launch/patient patient/*.read openid profile email
      MY_USER_TOKEN_USERNAME: tester
      # This is the client setup
      CLIENT_ID: bwell-client-id
      CLIENT_SECRET: bwell-secret
      CLIENT_AUDIENCE: client1
      CLIENT_ACCESS_TOKEN_LIFE_SPAN: 3600
      CLIENT_ID_TOKEN_LIFE_SPAN: 3600
      CLIENT_REFRESH_TOKEN_LIFE_SPAN: 3600
      # for client 2
      CLIENT_ID_2: bwell-client-id-2
      CLIENT_SECRET_2: bwell-secret-2
      CLIENT_AUDIENCE_2: client2
      # for client 3
      CLIENT_ID_3: bwell-client-id-3
      CLIENT_SECRET_3: bwell-secret-3
      CLIENT_AUDIENCE_3: client3
      CLIENT_ACCESS_TOKEN_LIFE_SPAN_3: 60
      CLIENT_ID_TOKEN_LIFE_SPAN_3: 60
      CLIENT_REFRESH_TOKEN_LIFE_SPAN_3: 3600
      # This is the service account that will be created in the realm
      SERVICE_ACCOUNT_NAME: service-account
      SERVICE_ACCOUNT_SCOPE: user/*.* access/*.*
      SERVICE_ACCOUNT_GROUPS: user/*.* access/*.*
      # These are the custom claims that will be added to any generated token
      MY_USER_CLIENT_PERSON_ID: 0b2ad38a-20bc-5cf5-9739-13f242b05892
      MY_USER_CLIENT_PATIENT_ID: d58b4c4d-e820-5935-adfc-4cb372a91c22
      MY_USER_BWELL_PERSON_ID: 0eb80391-0f61-5ce6-b221-a5428f2f38a7
      MY_USER_BWELL_PATIENT_ID: patient2

    entrypoint: >
      /bin/sh -c "
        pip install --upgrade pip;
        pip install python-keycloak requests;
        python /config/keycloak_config.py
      "
    networks:
      - web

networks:
  web:
    driver: bridge